{"version":3,"sources":["assets/roverMars.png","Components/Grid.js","Components/Input.js","Components/Rover.js","App.js","index.js"],"names":["Grid","initialValue","roverXPosition","roverYPosition","maxX","maxY","orientation","coordinates","y","x","point","toString","push","rover1Point","rover2Point","orientation1","orientation2","className","map","coordinatePoint","id","src","RoverImage","alt","Input","handleInputSubmit","useState","inputContent","setInputContent","value","onChange","e","target","onClick","Rover","step","mouvement","ends","mouvR","mouvM","mouvL","useEffect","console","log","length","App","setMaxX","setMaxY","roverFinalX","setRoverFinalX","roverFinalY","setRoverFinalY","roverInitialX","setRoverInitialX","roverInitialY","setRoverInitialY","setStep","rover1Mouvement","setRover1Mouvement","rover2Mouvement","setRover2Mouvement","setOrientaion","goToN","goToE","goToS","goToW","parseInt","goToYMore1","goToXLess1","goToYLess1","goToXMore1","2","inputValue","lineBreakValue","split","gridValue","rover1InitialPosition","1","rover2InitialPosition","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45c5de28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roverMars.80326424.png\";","import React from 'react';\nimport RoverImage from '../assets/roverMars.png';\n\n\nconst Grid = ({ initialValue, roverXPosition, roverYPosition, maxX, maxY, orientation }) => {\n\n  let coordinates = []\n\n  for(let y = maxY; y > -1; y--) {\n    for(let x = 0; x <= maxX; x++) {\n      let point = x.toString() + y.toString()\n      coordinates.push(point)\n    }\n  }\n\n  const rover1Point = `${roverXPosition?.[1]}${roverYPosition?.[1]}`\n  const rover2Point = `${roverXPosition?.[2]}${roverYPosition?.[2]}`\n  const orientation1 = orientation?.[1];\n  const orientation2 = orientation?.[2];\n  \n  return( \n  <div>\n   <h3>{initialValue ? \"Initial Position\" : \"End Position\"}</h3>\n    <div className='Grid'>\n    \n      {\n        coordinates.map((coordinatePoint) => {\n          return(\n            <div className='square' id={coordinatePoint}>\n              {\n                (rover1Point === coordinatePoint) &&\n                <div>\n                  <img className={`roverImg ${orientation1}`} src={RoverImage} alt=\"rover\" /> \n                  <p>Rover 1</p>\n                </div>\n              }\n              {\n                (rover2Point === coordinatePoint) && \n                <div>\n                  <img className={`roverImg ${orientation2}`} src={RoverImage} alt=\"rover\" /> \n                  <p>Rover 2</p>\n              </div> \n              }\n            </div>\n          )\n        })\n      }\n    </div>\n</div>\n);\n\n}\n   \n\nexport default Grid;","import React, { useState } from 'react';\n\nconst Input = ({ handleInputSubmit }) => {\n  const [inputContent, setInputContent] = useState();\n  return(\n  <div className=\"inputContainer\">\n    <h2>Input</h2>\n    <textarea value={inputContent} onChange={(e) => setInputContent(e.target.value)} />\n    <button onClick={() => handleInputSubmit(inputContent)}>Start</button>\n  </div>\n)\n}\n\nexport default Input;","import React, { useEffect } from 'react';\n\nconst Rover = ({ step, orientation, mouvement, ends, mouvR, mouvM, mouvL, x, y, id }) => {\n    // Go to the next mouv when the step change\n    useEffect(() => {\n        console.log(orientation);\n        if(step < mouvement.length){\n            switch(mouvement[step]) {\n                case \"L\": \n                    mouvL(id);\n                    break;\n                case \"R\":\n                    mouvR(id);\n                    break;\n                case \"M\":\n                    mouvM(id);\n                    break\n                default:\n                    console.log('aucune correspondance');\n            }\n        } else {\n            if(id === 1){\n                ends();\n            }\n        }\n    }, [step])\n    return(\n        <div>\n           {`${x} ${y} ${orientation}`}\n        </div>\n    )\n}\n\nexport default Rover;","import { useState } from 'react';\nimport './App.css';\nimport Grid from './Components/Grid';\nimport Input from './Components/Input';\nimport Rover from './Components/Rover';\n\nfunction App() {\n  const [maxX, setMaxX] = useState('0')\n  const [maxY, setMaxY] = useState('0')\n  const [roverFinalX, setRoverFinalX] = useState()\n  const [roverFinalY, setRoverFinalY] = useState()\n  const [roverInitialX, setRoverInitialX] = useState()\n  const [roverInitialY, setRoverInitialY] = useState()\n  const [step, setStep] = useState();\n  const [rover1Mouvement, setRover1Mouvement] = useState(false);\n  const [rover2Mouvement, setRover2Mouvement] = useState(false);\n  const [orientation, setOrientaion] = useState();\n  \n  function handleInputSubmit(inputValue){\n    // get and seperate all textArea value\n    const lineBreakValue = inputValue?.split(\"\\n\");\n\n    // check if input contains 5 lines\n    if(!lineBreakValue?.[4]){\n      alert('invalid input')\n      return\n    }\n\n    // set gridArea with max coordinate\n    const gridValue = lineBreakValue[0]?.split(' ');\n    if(gridValue[0]) setMaxX(gridValue[0]);\n    if(gridValue[1]) setMaxY(gridValue[1]);\n\n    // set rover1 inital value and movement\n    const rover1InitialPosition = lineBreakValue[1]?.split(' ');\n    setStep({ 1:0 })\n    setRover1Mouvement(lineBreakValue[2]?.split(''));\n    \n    // set rover2 inital value and movement\n    const rover2InitialPosition = lineBreakValue[3]?.split(' ');\n    setRoverFinalX({ 1: rover1InitialPosition[0], 2: rover2InitialPosition[0]});\n    setRoverFinalY({ 1: rover1InitialPosition[1], 2: rover2InitialPosition[1]});\n    setRoverInitialX({ 1: rover1InitialPosition[0], 2: rover2InitialPosition[0]});\n    setRoverInitialY({ 1: rover1InitialPosition[1], 2: rover2InitialPosition[1]});\n    setOrientaion({1: rover1InitialPosition[2], 2: rover2InitialPosition[2]});\n    setRover2Mouvement(lineBreakValue[4]?.split(''));\n  };\n\n  //Change Rover Orientation State Functions\n  function goToN(id){\n    console.log('turnToN');\n    setOrientaion({...orientation, [id]:\"N\"});\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToE(id){\n    setOrientaion({...orientation, [id]:\"E\"});\n    console.log('turnToE');\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToS(id){\n    setOrientaion({...orientation, [id]:\"S\"});\n    console.log('turnToS');\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToW(id){\n    console.log('turnToW');\n    setOrientaion({...orientation, [id]:\"W\"});\n    setStep({...step, [id]: step[id]+1 })\n  }\n\n  //Change Rover Coordinate Point State Functions\n  function goToXMore1(id){\n    console.log('x+1');\n    if(roverFinalX[id] >= 0 && roverFinalX[id] < maxX){\n      setRoverFinalX({...roverFinalX, [id]: parseInt(roverFinalX[id])+1});\n    }\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToXLess1(id){\n    console.log('x-1', roverFinalX[id] < maxX);\n    if(roverFinalX[id] >= 0 && roverFinalX[id] < maxX){\n      setRoverFinalX({...roverFinalX, [id]: parseInt(roverFinalX[id])-1});\n    }\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToYMore1(id){\n    console.log('y+1');\n    if(roverFinalY[id] >= 0 && roverFinalY[id] < maxY){\n      setRoverFinalY({...roverFinalY, [id]: parseInt(roverFinalY[id])+1});\n    }\n    setStep({...step, [id]: step[id]+1 })\n  }\n  function goToYLess1(id){\n    console.log('y-1');\n    if(roverFinalY[id] >= 0 && roverFinalY[id] < maxY){\n      setRoverFinalY({...roverFinalY, [id]: parseInt(roverFinalY[id])-1});\n    }\n    setStep({...step, [id]: step[id]+1 })\n  }\n  \n\n  // Call the corresponding function depending on the orientation of the rovers\n  function mouvL(id){\n    switch(orientation?.[id]){\n      case \"N\":\n        goToW(id)\n        break;\n      case \"W\":\n        goToS(id)\n        break;\n      case \"S\":\n        goToE(id)\n        break;\n      case \"E\":\n        goToN(id)\n        break;\n      default: console.log('errorr');\n    }\n  }\n  function mouvR(id){\n    switch(orientation?.[id]){\n      case \"N\":\n        goToE(id)\n        break;\n      case \"W\":\n        goToN(id)\n        break;\n      case \"S\":\n        goToW(id)\n        break;\n      case \"E\":\n        goToS(id)\n        break;\n        default: console.log('errorrr');\n    }\n  }\n  function mouvM(id){\n    switch(orientation?.[id]){\n      case \"N\":\n        goToYMore1(id)\n        break;\n      case \"W\":\n        goToXLess1(id)\n        break;\n      case \"S\":\n        goToYLess1(id)\n        break;\n      case \"E\":\n        goToXMore1(id)\n        break;\n        default: console.log('errorrrrr');\n    }\n  }\n\n  // Function call by the first rover when it's end to move, and wich triggers the second\n  function ends(){\n    setStep({...step, 2:0})\n    console.log('ends');\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <Input handleInputSubmit={handleInputSubmit} />\n        <div className=\"output\">\n          {\n            rover1Mouvement && \n            <>  \n              <h2>Output</h2>\n              <Rover id={1} step={step[1]} orientation={orientation?.[1]} mouvement={rover1Mouvement} ends={ends} mouvR={mouvR} mouvM={mouvM} mouvL={mouvL} x={roverFinalX?.[1]} y={roverFinalY?.[1]} />\n            </>\n          }\n          {\n            (step?.[2] >= 0) &&\n            <Rover id={2}  step={step[2]} orientation={orientation?.[2]} mouvement={rover2Mouvement} ends={ends} mouvR={mouvR} mouvM={mouvM} mouvL={mouvL} x={roverFinalX?.[2]} y={roverFinalY?.[2]} />\n          }    \n        </div>\n      </div>\n      {\n        (step?.[2] === 10) &&\n        <div className=\"gridsContainer\">\n          <Grid initialValue={true} roverXPosition={roverInitialX} roverYPosition={roverInitialY} maxX={maxX} maxY={maxY} orientation={orientation}></Grid>\n          <Grid initialValue={false} roverXPosition={roverFinalX} roverYPosition={roverFinalY} maxX={maxX} maxY={maxY} orientation={orientation}></Grid>  \n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}